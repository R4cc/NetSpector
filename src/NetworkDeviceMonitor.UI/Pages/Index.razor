@page "/"
@using NCrontab
@inject IUnitOfWork _uow
@inject NavigationManager nav

<PageTitle>Network Scanner - Dashboard</PageTitle>


@if(_networks is null)
{
        <a>Loading ...</a>
}
else
{
    <div class="container" >
        <div class="row" style="margin-left: 0em">
            <div class="col">
                <h1 style="font-size: 4em">Dashboard</h1>
                <h1>Networks</h1>
                @if(_networks.Count == 0)
                {
                    <a>No networks setup...</a>
                }
            </div>
        </div>
    </div>
    <div class="container" style="display: flex; flex-wrap: wrap; justify-content: flex-start; gap: 0.2em; row-gap: 2.5em; margin-bottom: 2em;">
        @foreach(var network in _networks)
        {
            <div class="col" style="max-width: 25em; min-width: 25em">
                <RadzenCard Style="width: 100%">
                    <div class="row" style="margin-bottom: 0.5em">
                        <h2>@network.Name</h2>
                    </div>
                    <div class="row">
                        <div class="col">
                            <h4>Network ID: </h4>
                            <h4>Device Count: </h4>
                        </div>
                        <div class="col">
                            <h4 style="font-weight: 400">@network.IpNetworkId / @network.SubnetMask</h4>
                            <h4 style="font-weight: 400">@network.Devices.Count</h4>
                        </div>
                    </div>
                    <hr/>
                    <div class="row">
                        <div class="col">
                            <RadzenButton Click="(() => LoadNetwork(network.NetworkId))" Style="width: 100%">Details</RadzenButton>
                        </div>
                    </div>
                </RadzenCard>
            </div>
        }
    </div>

}

@if(_autoscans is null)
{
    <a>Loading ...</a>
}
else
{
    <div class="container" >
    <div class="row" style="margin-left: 0em">
        <div class="col">
            <h1>Autoscans</h1>
            @if (_autoscans.Count == 0)
            {
                <a>No autoscans setup...</a>
            }
        </div>
    </div>
</div>    
<div class="container" style="display: flex; flex-wrap: wrap; justify-content: flex-start; gap: 0.2em; row-gap: 2.5em; ">
    @foreach(var scan in _autoscans)
    {
        <div class="col" style="max-width: 25em; min-width: 25em">
          <RadzenCard Style="width: 100%">
                <div class="row" style="margin-bottom: 0.5em;">
                    <div class="col-10">
                        <h2>@scan.Network.IpNetworkId</h2>
                    </div>
                    <div class="col-2">
                        <RadzenSwitch Style="margin-left: -2em; vertical-align: middle" @bind-Value="scan.IsActive"/>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <h4>Next Scan: </h4>
                    </div>
                    <div class="col">
                        <h4 style="font-weight: 400">@(scan.NextExecute.Date == DateTime.Today ? "Today " + scan.NextExecute.ToString("H:mm") : scan.NextExecute.ToString("g"))</h4>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <h4>Last Scanned: </h4>
                    </div>
                    <div class="col">
                        <h4 style="font-weight: 400">@(scan.LastExecuted is null ? "N/A" : (scan.LastExecuted.Value.Date == System.DateTime.Today ? "Today " + System.Convert.ToDateTime(scan.LastExecuted).ToString("H:mm") : (Convert.ToDateTime(scan.LastExecuted)).ToString("g")))</h4>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <h4>Status: </h4>
                    </div>
                    <div class="col">
                        <h4 style="font-weight: 400"><RadzenBadge BadgeStyle="@(scan.IsActive ? BadgeStyle.Primary : BadgeStyle.Danger)" Text="@(scan.IsActive ? "ACTIVE" : "INACTIVE")"/></h4>
                    </div>
                </div>
            </RadzenCard>
        </div>
    }
</div>
}

@code{
    private List<Domain.Models.Network> _networks;
    private List<Scan> _autoscans;

    protected override async Task OnInitializedAsync()
    {
        await LoadNetworks();
        await LoadScans();
    }

    private async Task LoadNetworks()
    {
        _networks = await _uow.INetworkRepository.GetAll();
    }        
    
    private async Task LoadScans()
    {
        _autoscans = await _uow.IScanRepository.GetAll();
    }    

    private async Task LoadNetwork(int networkId)
    {
        nav.NavigateTo($"/network/{networkId}");
    }
}