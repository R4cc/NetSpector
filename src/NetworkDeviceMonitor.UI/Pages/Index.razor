@page "/"
@inject IUnitOfWork _uow
@inject NavigationManager nav

<PageTitle>Network Scanner - Dashboard</PageTitle>

<div class="container" >
    <div class="row">
        <div class="col" style="margin-left: 1em">
            <h1>Dashboard</h1>
            <h2>Networks</h2>
            @if(_networks is not null && _networks.Count == 0)
            {
                <a>No networks set...</a>
            }
        </div>
    </div>
    <div class="row">
@if(_networks is null)
{
    <a>Loading ...</a>
}
else
{
    <div class="container" style="display: flex; flex-wrap: wrap; justify-content: flex-start; gap: 0.2em; row-gap: 2.5em">
    @foreach(var network in _networks)
    {
        <div class="col" style="max-width: 25em; min-width: 25em">
        <RadzenCard Style="width: 100%">
            <div class="row" style="margin-bottom: 0.5em">
                <h1>@network.Name</h1>
            </div>
            <div class="row">
                <div class="col">
                    <h4>Network ID: </h4>
                    <h4>Device Count: </h4>
                </div>
                <div class="col">
                    <h4 style="font-weight: 400">@network.IpNetworkId / @network.SubnetMask</h4>
                    <h4 style="font-weight: 400">@network.Devices.Count</h4>
                </div>
            </div>
            <hr/>
            <div class="row">
                <div class="col">
                    <RadzenButton Click="(() => LoadNetwork(network.NetworkId))" Style="width: 100%">Details</RadzenButton>
                </div>
            </div>
        </RadzenCard>
        </div>
    }
</div>
}
</div>
</div>

@code{
    private List<NetworkDeviceMonitor.Domain.Models.Network>? _networks;

    protected override async Task OnInitializedAsync()
    {
        await LoadNetworks();
    }

    private async Task LoadNetworks()
    {
        _networks = await _uow.INetworkRepository.GetAll();
    }    

    private async Task LoadNetwork(int networkId)
    {
        nav.NavigateTo($"/network/{networkId}");
    }
}